services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/hoy_db
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=hoy.settings
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - SECRET_KEY=${DJANGO_SECRET_KEY:-your-secret-key-here}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000,https://localhost:3000,https://127.0.0.1:3000}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000,https://localhost:3000,https://127.0.0.1:3000}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hoy_network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=${API_URL:-http://localhost:8000}
      - NEXT_PUBLIC_API_DOCKER_URL=http://backend:8000
      - NEXT_PUBLIC_API_LOCAL_URL=http://localhost:8000
      - NEXT_PUBLIC_USE_HTTPS=false
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - hoy_network

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=hoy_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - hoy_network

volumes:
  postgres_data:

networks:
  hoy_network:
    driver: bridge
