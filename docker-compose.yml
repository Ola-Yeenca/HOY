services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/hoy_db
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=hoy.settings
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,frontend,*
      - SECRET_KEY=${DJANGO_SECRET_KEY:-your-secret-key-here}
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_ALLOW_ALL_ORIGINS=true
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000
      - CSRF_COOKIE_DOMAIN=localhost
      - SESSION_COOKIE_DOMAIN=localhost
      - CSRF_COOKIE_SECURE=false
      - SESSION_COOKIE_SECURE=false
      - CSRF_COOKIE_SAMESITE=Lax
      - SESSION_COOKIE_SAMESITE=Lax
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USE_TLS=true
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_HOST=redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hoy_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - hoy_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=hoy_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - hoy_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - hoy_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  hoy_network:
    driver: bridge

volumes:
  postgres_data:
